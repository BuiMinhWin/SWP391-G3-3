# Server configuration

spring.security.oauth2.resourceserver.jwt.issuer-uri=https://accounts.google.com

# Spring datasource configuration
spring.datasource.url=jdbc:mysql://222.255.238.187:3306/SWP_DB
spring.datasource.username=root
spring.datasource.password=12345

# Hibernate JPA configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Spring application name
spring.application.name=SpringOAuth2.Implementation

# OAuth2 Google Client Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_SECRET}
spring.security.oauth2.client.registration.google.scope=profile
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.client-authentication-method=client_secret_post

# OAuth2 Google Provider Configuration
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

